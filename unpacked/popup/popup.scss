////////////////////////////////////////////////
// DARK MODE

// white-text
$white_text: #f5f5f5;

// h2
$pnk1_title: #d5003c;

// slider-thumb + selected button
$pnk2_selected: #bd003f;

//buttons outlines + selected slider part
$red3_outlines: #ae181d;

// slider-background + button hover background
$red_deep: #2d0e12;

// body background
$drk_background: #0d1117;

@media (prefers-color-scheme: dark) {
  body {
    background-color: $drk_background;
    color: $white_text;
  }

  h2 {
    color: $pnk1_title;
  }

  // slider background
  .range-slider__progress,
  // hover background on radio buttons
  .radio-container label span:hover,
  // background of selected radio button
  .radio-container label input:checked + span {
    background-color: $red_deep !important;
  }

  // unselected radio buttons
  .radio-container label span::before {
    background-color: unset !important;
    box-shadow: inset 0 0 0 0.125em $red3_outlines !important;
  }

  // selected radio button
  .radio-container label input:checked + span::before {
    box-shadow: inset 0 0 0 0.4375em $pnk2_selected !important;
  }

  // toggle switch
  .switch .slider {
    background-color: $red_deep !important;
    //border: 1px solid $red3_outlines;

    // thumb
    &::before {
      background-color: $pnk2_selected !important;
      box-shadow: 0 0 3px rgb(0 0 0), 0 0 3px rgb(0 0 0) inset, 0 0 0 99px $pnk1_title inset !important;
    }
  }

  input:checked + .slider {
    background-color: $red3_outlines !important;
  }

  tooltip-icon .tooltip-spacing {
    .tooltip-bg1 {
      background-color: #000 !important;
    }
    .tooltip-bg2 {
      background-color: #626262 !important;
    }
    .tooltip-text {
      color: #000 !important;
    }
  }
}

////////////////////////////////////////////////
/// Tooltips
///

tooltip-icon {
  width: 0;
  font-size: 16px;
  font-weight: normal;
  color: black;
  margin-top: 2px;
  position: relative;

  &:hover {
    cursor: help;
  }

  .tooltip-spacing {
    height: 20px;
    margin-left: 6px;
    position: relative;
    width: 20px;

    .tooltip-bg1 {
      background-color: #555;
      border-radius: 10px;
      content: " ";
      display: flex;
      height: 20px;
      position: absolute;
      top: 0;
      width: 20px;
    }

    .tooltip-bg2 {
      background-color: #fff;
      border-radius: 8px;
      content: " ";
      display: flex;
      height: 16px;
      left: 2px;
      position: absolute;
      top: 2px;
      width: 16px;
    }

    .tooltip-text {
      color: #555;
      font-size: 14px;
      font-weight: bold;
      line-height: 20px;
      position: relative;
      text-align: center;
      width: 20px;
    }
  }
}

////////////////////////////////////////////////
///  COLOR PICKER
///

.clr-picker {
  left: unset !important;
}

.clr-field {
  //color: rgb(250, 0, 0);
  background: inherit;
  border: 1px solid #252f3e;
  border-radius: 34px;
  padding: 6px;

  input {
    width: 155px;
    background: inherit;
    color: inherit;
    border: none;
    border-radius: inherit;
    outline: none;

    font-family: Courier, "Courier New", monospace;
    font-weight: 600;
    font-size: 24px;
    text-shadow: rgb(0, 0, 0) -1px 1px 2px, rgb(0, 0, 0) 1px 1px 2px, rgb(0, 0, 0) 1px -1px 0px,
      rgb(0, 0, 0) -1px -1px 0px;
    text-indent: 11px;
  }

  button {
    right: 9px !important;
    width: 24px !important;
    border-radius: 20px;
    height: 50% !important;
  }
}

////////////////////////////////////////////////
/// PAGE SETUP
///

$primary-color: #ae181d;
$secondary-color: #ad0007;

@media (prefers-color-scheme: light) {
  h2 {
    color: $primary-color;
  }
}

h2 {
  display: flex;
  user-select: none;
  text-align: center;
  font-family: "Segoe UI", Tahoma, sans-serif;
  font-size: 25px;
}

body {
  min-height: 220px;
  min-width: 350px;
  overflow: hidden;
  display: grid;
  place-content: space-evenly;
  grid-row-gap: 5px;
  place-items: center;

  .last-item {
    margin-top: 4px;
    margin-bottom: 7px;
  }

  &.custom-options-enabled:not(.permissions-mode) {
    height: 574px !important;
  }

  &:not(.custom-options-enabled) > div.custom-options {
    display: none !important;
  }

  @media screen and (max-width: 500px) {
    padding-bottom: 10px;
    width: 350px;
  }

  @media screen and (min-width: 500px) {
    height: 350px;
    padding-bottom: 20px;
  }

  div.max-width {
    display: grid;
    width: 325px;
    h2 {
      justify-content: center;
    }
  }

  div.custom-options {
    &.grid {
      display: grid;
      grid-template-columns: 180px 180px;
      grid-row: auto;
      grid-column-gap: 15px;
      grid-row-gap: 0;
      margin-top: 5px;

      h2 {
        font-size: 21px;
        margin-block-end: 10px;
        margin-top: 20px;
        justify-content: center;
      }

      div {
        justify-content: center;
        display: flex;

        .switch {
          margin-left: 5px;
          margin-top: 6px;
        }
      }
    }

    .column {
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
    h2 {
      margin-block-start: 10px;
    }
  }
}

a {
  position: fixed;
  top: 1em;
  left: 1em;
  display: inline-block;
  height: 2em;

  @media screen and (max-width: 500px) {
    position: static;
    order: -1;
  }

  > img {
    display: inherit;
    height: 100%;
  }
}

body > .range-slider,
label[dir="rtl"] .range-slider {
  width: Clamp(300px, 50vw, 800px);
  min-width: 200px;
}

////////////////////////////////////////////////
/// TOGGLE SWITCH BUTTON
///

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;

  /* Hide default HTML checkbox */
  input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* The slider */
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #eee;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: #eee;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  }

  input:checked + .slider {
    background-color: $secondary-color;
  }

  input:checked + .slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
  }

  /* Rounded sliders */
  .slider.round {
    border-radius: 34px;
  }

  .slider.round:before {
    border-radius: 50%;

    box-shadow: 0 0 3px rgb(0 0 0 / 40%), 0 0 1px rgb(0 0 0 / 50%) inset, 0 0 0 99px white inset;
  }
}

////////////////////////////////////////////////
/// PERMISSIONS PROMPT
///

body.permissions-mode {
  height: 250px !important;
  //background: linear-gradient(to left top, #c32c71 50%, #b33771 50%);

  #permissions_wrapper {
    display: flex !important;
  }

  & > div:not(#permissions_wrapper) {
    display: none !important;
  }
}

#permissions_wrapper {
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  h2 {
    color: #e7195c;
  }
  #permissions_button {
    width: 200px;
    height: 70px;
    background: linear-gradient(to left top, #c32c71 50%, #b33771 50%);
    border-style: none;
    color: #fff;
    font-size: 23px;
    letter-spacing: 3px;
    font-family: Lato, sans-serif;
    font-weight: 600;
    text-align: center;
    outline: none;
    cursor: pointer;
    position: relative;
    padding: 0px;
    overflow: hidden;
    transition: all 0.5s;
    box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
    &:hover {
      transition: all 0.5s;
      transform: perspective(5px) scale(1.1);
      box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.4);
    }
    span {
      position: absolute;
      display: block;
    }
    span:nth-child(1) {
      height: 3px;
      width: 200px;
      top: 0px;
      left: -200px;
      background: linear-gradient(to right, rgba(0, 0, 0, 0), #f6e58d);
      border-top-right-radius: 1px;
      border-bottom-right-radius: 1px;
      animation: span1 2s linear infinite;
      animation-delay: 1s;
    }
    @keyframes span1 {
      0% {
        left: -200px;
      }
      100% {
        left: 200px;
      }
    }
    span:nth-child(2) {
      height: 70px;
      width: 3px;
      top: -70px;
      right: 0px;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0), #f6e58d);
      border-bottom-left-radius: 1px;
      border-bottom-right-radius: 1px;
      animation: span2 2s linear infinite;
      animation-delay: 2s;
    }
    @keyframes span2 {
      0% {
        top: -70px;
      }
      100% {
        top: 70px;
      }
    }
    span:nth-child(3) {
      height: 3px;
      width: 200px;
      right: -200px;
      bottom: 0px;
      background: linear-gradient(to left, rgba(0, 0, 0, 0), #f6e58d);
      border-top-left-radius: 1px;
      border-bottom-left-radius: 1px;
      animation: span3 2s linear infinite;
      animation-delay: 3s;
    }
    @keyframes span3 {
      0% {
        right: -200px;
      }
      100% {
        right: 200px;
      }
    }
    span:nth-child(4) {
      height: 70px;
      width: 3px;
      bottom: -70px;
      left: 0px;
      background: linear-gradient(to top, rgba(0, 0, 0, 0), #f6e58d);
      border-top-right-radius: 1px;
      border-top-left-radius: 1px;
      animation: span4 2s linear infinite;
      animation-delay: 4s;
    }
    @keyframes span4 {
      0% {
        bottom: -70px;
      }
      100% {
        bottom: 70px;
      }
    }
  }
}

/////////////////////////////////////////////////
/// HUD Radios
///
h2.hud {
  margin-block-end: 8px;
  margin-block-start: 20px;
}

.radio-container {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: center;
  label {
    display: flex;
    //flex-grow: 1;
    cursor: pointer;
    font-weight: 500;
    position: relative;
    overflow: hidden;
    margin: 0.3em;
    input {
      position: absolute;
      left: -9999px;
      &:checked + span {
        background-color: mix(#fff, $primary-color, 84%);
        &:before {
          box-shadow: inset 0 0 0 0.4375em $primary-color;
        }
      }
    }
    span {
      user-select: none;
      font-family: "Segoe UI Semibold", sans-serif;
      font-size: medium;
      display: flex;
      align-items: center;
      padding: 0.375em 0.75em 0.375em 0.375em;
      border-radius: 99em; // or something higher...
      transition: 0.25s ease;
      &:hover {
        background-color: mix(#fff, $primary-color, 84%);
      }
      &:before {
        display: flex;
        flex-shrink: 0;
        content: "";
        background-color: #fff;
        width: 1.5em;
        height: 1.5em;
        border-radius: 50%;
        margin-right: 0.375em;
        transition: 0.25s ease;
        box-shadow: inset 0 0 0 0.125em $primary-color;
      }
    }
  }
}

////////////////////////////////////////////////
/// SLIDERS
///

#hud_size_slider {
  &::before,
  &::after {
    --offset: 0;
  }

  .range-slider__progress {
    --start-end: 0;
  }
}

.range-slider {
  --value-offset-y: var(--ticks-gap);
  --value-active-color: white;
  --value-background: transparent;
  --value-background-hover: var(--primary-color);
  --value-font: 700 12px/1 Arial;

  --fill-color: var(--primary-color);
  --progress-background: #eee;
  --progress-radius: 20px;
  --track-height: calc(var(--thumb-size) / 2);

  --min-max-font: 12px Arial;
  --min-max-opacity: 0.5;
  --min-max-x-offset: 10%; // 50% to center

  --thumb-size: 22px;

  @media (prefers-color-scheme: dark) {
    // $red3_outline
    --primary-color: #ae181d;
    //$pnk2_selected
    --thumb-color: #bd003f;
  }
  @media (prefers-color-scheme: light) {
    --primary-color: #ae181d;
    --thumb-color: white;
  }

  --thumb-shadow: 0 0 3px rgba(0, 0, 0, 0.4), 0 0 1px rgba(0, 0, 0, 0.5) inset, 0 0 0 99px var(--thumb-color) inset;

  --thumb-shadow-active: 0 0 0 calc(var(--thumb-size) / 4) inset var(--thumb-color),
    0 0 0 99px var(--primary-color) inset, 0 0 3px rgba(0, 0, 0, 0.4);

  --thumb-shadow-hover: var(--thumb-shadow);

  --ticks-thickness: 1px;
  --ticks-height: 5px;
  --ticks-gap: var(--ticks-height, 0); // vertical space between the ticks and the progress bar
  --ticks-color: silver;

  // ⚠️ BELOW VARIABLES SHOULD NOT BE CHANGED
  --step: 1;
  --ticks-count: Calc(var(--max) - var(--min)) / var(--step);
  --maxTicksAllowed: 30;
  --too-many-ticks: Min(1, Max(var(--ticks-count) - var(--maxTicksAllowed), 0));
  --x-step: Max(
    var(--step),
    var(--too-many-ticks) * (var(--max) - var(--min))
  ); // manipulate the number of steps if too many ticks exist, so there would only be 2
  --tickInterval: 100/ ((var(--max) - var(--min)) / var(--step)) * var(--tickEvery, 1);
  --tickIntervalPerc: calc(
    (100% - var(--thumb-size)) / ((var(--max) - var(--min)) / var(--x-step)) * var(--tickEvery, 1)
  );

  --value-a: Clamp(var(--min), var(--value, 0), var(--max)); // default value ("--value" is used in single-range markup)
  --value-b: var(--value, 0); // default value
  --text-value-a: var(--text-value, "");

  --completed-a: calc((var(--value-a) - var(--min)) / (var(--max) - var(--min)) * 100);
  --completed-b: calc((var(--value-b) - var(--min)) / (var(--max) - var(--min)) * 100);
  --ca: Min(var(--completed-a), var(--completed-b));
  --cb: Max(var(--completed-a), var(--completed-b));

  // breakdown of the below super-complex brain-breaking CSS math:
  // "clamp" is used to ensure either "-1" or "1"
  // "calc" is used to inflate the outcome into a huge number, to get rid of any value between -1 & 1
  // if absolute diff of both completed % is above "5" (%)
  // ".001" bumps the value just a bit, to avoid a scenario where calc resulted in "0" (then clamp will also be "0")
  --thumbs-too-close: Clamp(-1, 1000 * (Min(1, Max(var(--cb) - var(--ca) - 5, -1)) + 0.001), 1);
  --thumb-close-to-min: Min(1, Max(var(--ca) - 2, 0)); // 2% threshold
  --thumb-close-to-max: Min(1, Max(98 - var(--cb), 0)); // 2% threshold

  @mixin thumb {
    appearance: none;
    height: var(--thumb-size);
    width: var(--thumb-size);
    transform: var(--thumb-transform);
    border-radius: var(--thumb-radius, 50%);
    background: var(--thumb-color);
    box-shadow: var(--thumb-shadow);
    border: none;
    pointer-events: auto;
    transition: 0.1s;
  }

  display: inline-block;
  height: Max(var(--track-height), var(--thumb-size));
  // margin: calc((var(--thumb-size) - var(--track-height)) * -.25) var(--thumb-size) 0;
  background: linear-gradient(to right, var(--ticks-color) var(--ticks-thickness), transparent 1px) repeat-x;
  background-size: var(--tickIntervalPerc) var(--ticks-height);
  background-position-x: calc(var(--thumb-size) / 2 - var(--ticks-thickness) / 2);
  background-position-y: var(--flip-y, bottom);

  padding-bottom: var(--flip-y, var(--ticks-gap));
  padding-top: calc(var(--flip-y) * var(--ticks-gap));
  margin-top: 13px;

  position: relative;
  z-index: 1;

  &[data-ticks-position="top"] {
    --flip-y: 1;
  }

  // mix/max texts
  &::before,
  &::after {
    --offset: calc(var(--thumb-size) / 2);
    content: counter(x);
    display: var(--show-min-max, block);
    font: var(--min-max-font);
    position: absolute;
    bottom: var(--flip-y, -2.5ch);
    top: calc(-2.5ch * var(--flip-y));
    opacity: Clamp(0, var(--at-edge), var(--min-max-opacity));
    transform: translateX(calc(var(--min-max-x-offset) * var(--before, -1) * -1)) scale(var(--at-edge));
    pointer-events: none;
  }

  &::before {
    --before: 1;
    --at-edge: var(--thumb-close-to-min);
    counter-reset: x var(--min);
    left: var(--offset);
  }

  &::after {
    --at-edge: var(--thumb-close-to-max);
    counter-reset: x var(--max);
    right: var(--offset);
  }

  &__values {
    position: relative;
    top: 50%;
    line-height: 0;
    text-align: justify;
    width: 100%;
    pointer-events: none;
    margin: 0 auto;
    z-index: 5;

    // trick so "justify" will work
    &::after {
      content: "";
      width: 100%;
      display: inline-block;
      height: 0;
      background: red;
    }
  }

  &__progress {
    --start-end: calc(var(--thumb-size) / 2);
    --clip-end: calc(100% - (var(--cb)) * 1%);
    --clip-start: calc(var(--ca) * 1%);
    --clip: inset(-20px var(--clip-end) -20px var(--clip-start));
    position: absolute;
    left: var(--start-end);
    right: var(--start-end);
    top: calc(var(--ticks-gap) * var(--flip-y, 0) + var(--thumb-size) / 2 - var(--track-height) / 2);
    //  transform: var(--flip-y, translateY(-50%) translateZ(0));
    height: calc(var(--track-height));
    background: var(--progress-background, #eee);
    pointer-events: none;
    z-index: -1;
    border-radius: var(--progress-radius);

    // fill area
    &::before {
      content: "";
      position: absolute;
      // left: Clamp(0%, calc(var(--ca) * 1%), 100%); // confine to 0 or above
      // width: Min(100%, calc((var(--cb) - var(--ca)) * 1%)); // confine to maximum 100%
      left: 0;
      right: 0;
      clip-path: var(--clip);
      top: 0;
      bottom: 0;
      background: var(--fill-color, black);
      box-shadow: var(--progress-fill-shadow);
      z-index: 1;
      border-radius: inherit;
    }

    // shadow-effect
    &::after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      box-shadow: var(--progress-shadow);
      pointer-events: none;
      border-radius: inherit;
    }
  }

  & > input {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: var(--thumb-size);
    margin: 0;
    position: absolute;
    left: 0;
    top: calc(50% - Max(var(--track-height), var(--thumb-size)) / 2 + calc(var(--ticks-gap) / 2 * var(--flip-y, -1)));
    cursor: -webkit-grab;
    cursor: grab;
    outline: none;
    background: none;

    &:not(:only-of-type) {
      pointer-events: none;
    }

    &::-webkit-slider-thumb {
      @include thumb;
    }
    &::-moz-range-thumb {
      @include thumb;
    }
    &::-ms-thumb {
      @include thumb;
    }

    &:hover {
      --thumb-shadow: var(--thumb-shadow-hover);
      & + output {
        --value-background: var(--value-background-hover);
        --y-offset: -5px;
        color: var(--value-active-color);
        box-shadow: 0 0 0 3px var(--value-background);
      }
    }

    &:active {
      --thumb-shadow: var(--thumb-shadow-active);
      cursor: grabbing;
      z-index: 2; // when sliding left thumb over the right or vice-versa, make sure the moved thumb is on top
      + output {
        transition: 0s;
      }
    }

    &:nth-of-type(1) {
      --is-left-most: Clamp(0, (var(--value-a) - var(--value-b)) * 99999, 1);
      & + output {
        &:not(:only-of-type) {
          --flip: calc(var(--thumbs-too-close) * -1);
        }

        --value: var(--value-a);
        --x-offset: calc(var(--completed-a) * -1%);
        &::after {
          content: var(--prefix, "") var(--text-value-a) var(--suffix, "");
        }
      }
    }

    &:nth-of-type(2) {
      --is-left-most: Clamp(0, (var(--value-b) - var(--value-a)) * 99999, 1);
      & + output {
        --value: var(--value-b);
      }
    }

    // non-multiple range should not clip start of progress bar
    &:only-of-type {
      ~ .range-slider__progress {
        --clip-start: 0;
      }
    }

    & + output {
      --flip: -1;
      --x-offset: calc(var(--completed-b) * -1%);
      --pos: calc(((var(--value) - var(--min)) / (var(--max) - var(--min))) * 100%);

      pointer-events: none;
      position: absolute;
      z-index: 5;
      background: var(--value-background);
      border-radius: 10px;
      padding: 2px 4px;
      left: var(--pos);
      transform: translate(
        var(--x-offset),
        calc(150% * var(--flip) - (var(--y-offset, 0px) + var(--value-offset-y)) * var(--flip))
      );
      transition: all 0.12s ease-out, left 0s;

      &::after {
        content: var(--prefix, "") var(--text-value-b) var(--suffix, "");
        font: var(--value-font);
      }
    }
  }
}
